name: Vampi build pipeline with security test

on:
  push:
  repository_dispatch:
  workflow_dispatch:

jobs:
  scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Run VAmPI 
        run: docker compose up -d

      - name: Test VAmPI
        run: sleep 5 && curl http://localhost:5002/ --retry 10 --retry-delay 1

      - name: Createdb
        run: curl http://localhost:5002/createdb

      - name: Docker login
        uses: docker/login-action@v1 
        with:
          registry: us-central1-docker.pkg.dev/noname-artifacts/nns-docker
          username: ${{ secrets.ACTIVE_REGISTRY_USER }}
          password: ${{ secrets.ACTIVE_REGISTRY_PASSWORD }}

      - name: Cache active-cli Docker image
        id: cache-docker
        uses: actions/cache@v3
        with:
          path: active-cli.tar
          key: active-cli-v1-cache

      - name: Load active-cli image from cache
        if: steps.cache-docker.outputs.cache-hit == 'true'
        run: docker load -i active-cli.tar

      - name: Pull and save active-cli image (if not cached)
        if: steps.cache-docker.outputs.cache-hit != 'true'
        run: |
          docker pull us-central1-docker.pkg.dev/noname-artifacts/nns-docker/active-cli:latest
          docker save us-central1-docker.pkg.dev/noname-artifacts/nns-docker/active-cli:latest -o active-cli.tar

      - name: Active Testing Scan
        run: >
          docker run 
          --add-host=host.docker.internal:host-gateway 
          -e ACTIVE_CONFIG_FILE_PATH=/noname/config.json 
          -v $(pwd)/noname:/noname 
          -v $(pwd)/openapi_specs:/openapi_specs 
          us-central1-docker.pkg.dev/noname-artifacts/nns-docker/active-cli:latest scan 
          --api-url=${{ secrets.ACTIVE_API_URL }} 
          --api-token=${{ secrets.ACTIVE_API_TOKEN }} 
          --test-group-id=699c4b25-b4ca-47e5-8c95-23c3a0afa990
          --branch-name=${{ github.head_ref || github.ref_name }}
          --severity-threshold=high
          --analyze

  deploy:
    needs: scan
    runs-on: ubuntu-latest

    steps:
      - name: echo
        run: echo Vampi security scan passed, deploying to production
